[package]
name = "tantara"
version = "0.1.0"
authors = ["Daw-Chih Liou <dawochih.liou@gmail.com>"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.83"
getrandom = { version = "0.2", features = ["js"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }

tantivy = "0.19.0"
serde = { version = "1.0.150", features = ["derive"] }
serde_json = "1.0.89"
serde-wasm-bindgen = "0.4"

[dev-dependencies]
wasm-bindgen-test = "0.3.13"
criterion = "0.4"
pprof = { version = "0.11.0", features = ["flamegraph", "criterion"] }

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

# Criterion bechmark entries
[[bench]]
name = "analyzer"
harness = false

[[bench]]
name = "index-bench"
harness = false